name: Replace & Deploy to EC2

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init and Apply
        id: terraform_init
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          # echo "try this 1"
          # echo "${{ steps.terraform_init.outputs.stdout.ec2_instance_ip }}"
          echo "try this 2"
          echo "try this 2.5"
          echo "${{ steps.terraform_init.outputs.ec2_instance_ip }}"
          echo "ec2_instance_id=`terraform output -raw instance_id`" >> $GITHUB_ENV
          ec2_instance_ip=$(terraform output ec2_instance_ip)
          echo "${{env.ec2_instance_id}}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Get EC2 Instance IP
        id: ec2_ip
        run: |
          # cd terraform
          echo "testing..."
          echo "${{steps.terraform_init.outputs.ec2_instance_ip}}"
          scp -o StrictHostKeyChecking=no -r . ec2-user@${{ steps.terraform_init.outputs.ec2_instance_ip }}:/
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      # - name: Copy Repo to EC2 Instance
      #   run: |
      #     scp -o StrictHostKeyChecking=no -r . ec2-user@${{ steps.ec2_ip.outputs.instance_ip }}:/
      #   env:
      #     EC2_INSTANCE_IP: ${{ env.instance_ip }}
      #     uses: appleboy/scp-action@master
      #     with:
      #     host: ${{ steps.ec2_ip.outputs.instance_ip }}
      #     username: ec2-user
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     source: "./*"
      #     target: "/home/ec2-user/"




      # scp -o StrictHostKeyChecking=no -r . ec2-user@${{ env.instance_ip }}:/


      # ec2_instance_ip=$(terraform output ec2_instance_ip)




      # - name: SSH and Deploy Code
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ steps.ec2_ip.outputs.IP }}
      #     username: ec2-user
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       git clone https://github.com/AnthonyCalderaio/Machine-Learning.git
      #       cd Machine-Learning
      #       # Any additional deployment scripts you might have

name: Deploy Latest ML_API

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_EC2_SSH: ${{ secrets.EC2_SSH }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init and Apply
        id: terraform_init
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
          # terraform apply -auto-approve -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" 
          echo "heres the host"
          echo ::set-output name=ec2_instance_ip::$(terraform output ec2_instance_ip | sed 's/"//g')
      # - name: Attach SSH Key
        # run: |
        #   mkdir -p ~/.ssh
        #   echo "${{ secrets.EC2_PRIVATE_SSH }}" > ~/.ssh/id_rsa
        #   echo "LSing"
        #   ls
        #   chmod 700 ~/.ssh
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_SSH }}  
      - name: Checkout the repo
        uses: actions/checkout@v2
        with: 
          # This will create a directory named `my-repo` and copy the repo contents to it
          # so that you can easily upload it to your remote server
          path: git@github.com:AnthonyCalderaio/Machine-Learning.git
      - name: SCP files
        run:
          # scp -i -v  /ML_API ${{ secrets.EC2_USER }}@${{ steps.terraform_init.outputs.ec2_instance_ip }}:/
          scp -i $SSH_AUTH_SOCK -r /ML_API ${{ secrets.EC2_USER }}@${{ steps.terraform_init.outputs.ec2_instance_ip }}:/

      # - name: Copy ML_API to EC2  
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     # host: 3.89.105.66
      #     host: ${{ steps.terraform_init.outputs.ec2_instance_ip }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_PRIVATE_SSH }}
      #     port: 22
      #     debug: true
      #     source: "ML_API/*"
      #     target: ""
          

